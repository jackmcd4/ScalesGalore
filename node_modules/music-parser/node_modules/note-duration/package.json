{
  "name": "note-duration",
  "version": "1.3.0",
  "description": "Parse note durations",
  "main": "index.js",
  "scripts": {
    "test": "vows test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/danigb/note-duration.git"
  },
  "keywords": [
    "note",
    "duration",
    "time",
    "signature",
    "music",
    "theory",
    "solfege"
  ],
  "author": {
    "name": "danigb"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/danigb/note-duration/issues"
  },
  "homepage": "https://github.com/danigb/note-duration",
  "devDependencies": {
    "vows": "^0.8.1"
  },
  "readme": "# note-duration\n\n[![Code Climate](https://codeclimate.com/github/danigb/note-duration/badges/gpa.svg)](https://codeclimate.com/github/danigb/note-duration)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n\nParse note durations. It can convert from name to\n[value](http://en.wikipedia.org/wiki/Note_value) and viceversa.\n\n## Usage\n\nInstall the node module: `npm install --save node-duration`\nand require it from you file:\n\n```js\nvar duration = require('note-duration');\n```\n\nYou can convert from names to values:\n\n```js\nduration('long');          // => 4\nduration('double');         // => 2\nduration('whole');          // => 1\nduration('half');           // => 1/2\nduration('quarter');        // => 1/4\nduration('eighth');         // => 1/8\nduration('sixteenth');      // => 1/16\nduration('thirty-second');  // => 1/32\n```\n\nFrom letter and dots to values:\n\n```js\nduration(\"h\");   // => 1/2\nduration(\"h.\");  // => dot: 1/2 + 1/4\nduration(\"h..\"); // => double dot: 1/2 + 1/4 + 1/8\nduration(\"ht\");  // => triplet: (1/2 + 1/ 2) / 3\nduration(\"q\");   // => 1/4\nduration(\"q.\");  // => dot: 1/4 + 1/8\nduration(\"q..\"); // => double dot: 1/4 + 1/8 + 1/16\nduration(\"qt\");  // => triplet: (1/4 + 1/4) / 3\n```\n\nFrom number string to value:\n\n```js\nduration(\"2\");   // => 1/2\nduration(\"2.\");  // => dot: 1/2 + 1/4\nduration(\"2t\");  // => triplet: (1/2 + 1/ 2) / 3\nduration(\"2..\"); // => double dot: 1/2 + 1/4 + 1/8\nduration(\"4\");   // => 1/4\nduration(\"4.\");  // => dot: 1/4 + 1/8\nduration(\"4..\"); // => double dot: 1/4 + 1/8 + 1/16\nduration(\"4t\");  // => triplet: (1/4 + 1/4) / 3\n```\n\n\nThe `duration.toString` method does the opposite: convert from value to letter and dots:\n\n```js\nduration.toString(1/2 + 1/4);        // => \"h.\"\nduration.toString(1/4 + 1/2 + 1/8);  // => \"q..\"\n```\n\n## License\n\nMIT License\n",
  "readmeFilename": "README.md",
  "_id": "note-duration@1.3.0",
  "_shasum": "827ce9af4ced1192ef3a6b9cec263f29bdd0d836",
  "_from": "note-duration@^1.3.0",
  "_resolved": "https://registry.npmjs.org/note-duration/-/note-duration-1.3.0.tgz"
}

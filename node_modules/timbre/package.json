{
  "name": "timbre",
  "version": "14.11.25",
  "description": "JavaScript library for objective sound programming",
  "author": {
    "name": "nao yonamine",
    "email": "mohayonao@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mohayonao/timbre.js.git"
  },
  "main": "timbre.node.js",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/mohayonao/timbre.js/master/LICENSE"
    }
  ],
  "dependencies": {
    "readable-stream": "^1.0.33",
    "speaker": "^0.2.1"
  },
  "devDependencies": {
    "chai": "^1.10.0",
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-uglify": "^0.6.0",
    "grunt-contrib-watch": "^0.6.1",
    "mocha": "^2.0.1"
  },
  "readme": "timbre.js\n=========\nJavaScript library for objective sound programming\n\nTimbre.js provides a functional processing and synthesizing audio in your web apps with modern JavaScript's way like jQuery or node.js. It has many **T-Object** (Timbre-Object) that connected together to define the graph-based routing for overall audio rendering. It is a goal of this project to approach the next generation audio processing for web.\n\n## Project Page ##\n[English](http://mohayonao.github.com/timbre.js/) | [日本語](http://mohayonao.github.com/timbre.js/ja/)\n\n## Examples ##\n[BeatBox](http://mohayonao.github.com/timbre.js/beatbox.html) | [Chords Work](http://mohayonao.github.com/timbre.js/chord.html) | [Gymnopedie](http://mohayonao.github.com/timbre.js/satie.html) | [Khoomii](http://mohayonao.github.com/timbre.js/khoomii.html) | [Reich](http://mohayonao.github.com/timbre.js/reich.html)\n\n## Supports ##\nTimbre.js runs on modern browsers for Windows/Mac/Linux/iOS/Android or node.js.\n\n![Chrome 14.0-](http://mohayonao.github.com/timbre.js/misc/img/chrome.png)\n![Safari 6.0-](http://mohayonao.github.com/timbre.js/misc/img/safari.png)\n![Firefox 4.0-](http://mohayonao.github.com/timbre.js/misc/img/firefox.png)\n![Opera](http://mohayonao.github.com/timbre.js/misc/img/opera.png)\n![node.js 0.8-](http://mohayonao.github.com/timbre.js/misc/img/nodejs.png)\n\n## Installation ##\n### browser\nInclude the `timbre.js` file. It will install itself as `timbre`, `T` under the global namespace.\n\n```html\n<script src=\"timbre.js\"></script>\n<script>\n  T(\"sin\", {freq:880, mul:0.5}).play();\n</script>\n```\n\n### Flash fallback (for Opera and IE10)\nDownload an additional file (Right-click and use \"Save As\")\n\n- [timbre.swf](/timbre.js/timbre.swf)\n\n`timbre.swf` must be set in the same folder as `timbre.js`.\n\n### node.js\nInstall via npm: `npm install timbre`, you can require it as a standard node module.\n\n```js\nvar T = require(\"timbre\");\n\nT(\"sin\", {freq:880, mul:0.5}).play();\n```\n\n## License ##\n\nMIT\n\n## ChangeLog ##\n**14.11.25** (356.27KB)\n* Merge: [#33](https://github.com/mohayonao/timbre.js/pull/33) update of the note duration formula to handle more 3 dots\n* Merge: [#36](https://github.com/mohayonao/timbre.js/pull/36) use latest Web Audio API interfaces\n\n**14.10.12** (356.28KB)\n* Fixed: Decoding wav file\n* Fixed: Envelope release\n\n**14.08.07** (356.19KB)\n* Fixed: Export for CommonJS env [#19](https://github.com/mohayonao/timbre.js/issues/19)\n\n**14.06.23** (356.14KB)\n* Fixed: [#23](https://github.com/mohayonao/timbre.js/issues/23) fix to work on an iOS device\n* Fixed: fix to work on node.js\n\n**14.05.28** (355.91KB)\n* Fixed: [#19](https://github.com/mohayonao/timbre.js/issues/19)\n\n**14.05.15** (355.95KB)\n* Fixed: [#15](https://github.com/mohayonao/timbre.js/issues/15)\n* Excluded support of Audio Data API. use Web Audio API instead.\n\n**13.08.03** (361.93KB)\n* Adding Extra: mp3_decode. See [mp3_decode](http://mohayonao.github.io/timbre.js/mp3_decode.html)\n* Adding Extra: soundfont. See [soundfont](http://mohayonao.github.io/timbre.js/soundfont.html)\n\n**13.05.03** (361.93KB)\n* Bugfix: wav decoder. See [#3](https://github.com/mohayonao/timbre.js/issues/3)\n\n**13.05.01** (361.75KB)\n* Added: `T(\"task\")`\n* Added: `TimbreObject.to()`\n* Added: `TimbreObject.splice()`\n* Added: `TimbreObject.postMessage()`\n* Updated: `T(\"mml\")` support multi tracks, command token\n* Updated: `TimbreObject` support buddies interface\n* Bugfix: `T(\"mouse.x\")`, `T(\"mouse.y\")`\n\n**13.04.19** (346.63KB)\n* Bugfix: end process of `T(\"params\")`\n\n**13.04.17** (344.94KB)\n* Updated: readable stream api (node.js)\n\n**13.04.06** (344.94KB)\n* Fixed: `T(\"pluck)` buffer size\n\n**13.04.01** (344.95KB)\n* Bugfix: `T(\"buffer\").slice()`\n* Bugfix: `fn.pointer()` for Opera\n* Fixed: Flash fallback\n\n**13.03.10** (345.41KB)\n* Fixed: Checking Float64Array support. See [#2](https://github.com/mohayonao/timbre.js/pull/2)\n* Changed: `lame` support (default -> optional)\n* updated dependencies in package.json\n\n**13.03.01** (355.72KB)\n* Added: `T(\"script\")`\n* Added: `T(\"waveshaper\")`\n* Added: `T(\"lag\")`\n* Added: `T(\"mono\")`\n* Added: `T(\"delay\").cross`\n* Added: `T(\"audio.jsonp\")` to extras\n* Moved: `T(\"keyboard\")` to extras\n* Moved: `T(\"mouse\")` to extras\n* Moved: `T(\"cosc)` to extras\n* Renamed: `T(\"mml\")`: `mml` event listener -> `data` event listener\n* Fixed: Flash fallback support for Opera, IE9 (changing the installation)\n* make it easier to make a stereo object\n\n**13.02.07** (334.61KB)\n* Added `T.setup({f64:true})` to use Float64Array instead of Float32Array\n* Added Android/Firefox support\n* Added Flash fallback support for Opera, IE9\n* performance improvements\n\n**13.02.06** (337.50KB)\n* workadound for iOS6.1 bug (failure to start processing in a callback of XMLHttpRequest)\n\n**13.02.02** (335.97KB)\n* Fixed: decoder for webkit\n\n**13.02.01** (335.96KB)\n* Added: `T(\"reverb\")`\n* Added: `T(\"chorus\")`\n* Added: `T(\"eq\")`\n* Added: `T(\"mediastream\")`\n* Added: `T(\"-\")`, `T(\"/\")`, `T(\"min\")`, `T(\"max\")`\n* Added: `T(\"WebAudioAPI:recv\")`, `T(\"WebAudioAPI:send\")` at extras\n* Added: `T(\"MoogFF\")` at extras\n* Renamed: `T(\"phaseshift\")` to `T(\"phaser\")`\n* Renamed: event names `scope`, `fft` to `data` (`T(\"scope\")`, `T(\"spectrum\")`)\n* Fixed: `T(\"osc\").phase`, `T(\"osc\").fb`\n* Fixed: `T(\"biquad\").plot()`\n* Fixed: `T(\"mml\").isEnded`\n\n**13.01.20a** (294.82KB)\n* Renamed: `T(\"comp\").postGain` to `T(\"comp\").gain`\n\n**13.01.20** (294.83KB)\n* Added: `T(\"adshr\")`, `T(\"ahdsfr\")`\n* Added: `T(\"comp\")`\n* Added: `T(\"phaseshift\")`\n\n**13.01.18a** (268.71KB)\n* new version (beta)\n* [Overview of what's new and changed from old timbre.js v12.XX](https://github.com/mohayonao/timbre.js/wiki/Overview-of-what's-new-and-changed-from-old-timbre.js-v12.XX)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mohayonao/timbre.js/issues"
  },
  "homepage": "https://github.com/mohayonao/timbre.js",
  "_id": "timbre@14.11.25",
  "_shasum": "468d8dae10640dc82f16effd2451e735b18280fa",
  "_from": "timbre@",
  "_resolved": "https://registry.npmjs.org/timbre/-/timbre-14.11.25.tgz"
}
